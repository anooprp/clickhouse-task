services:
  # -------------------------------------
  # PostgreSQL
  # -------------------------------------
  postgres:
    image: postgres:17
    container_name: psql_source
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  # -------------------------------------
  # ClickHouse
  # -------------------------------------
  clickhouse:
    image: clickhouse/clickhouse-server
    environment:
      - CLICKHOUSE_USER=clickhouse
      - CLICKHOUSE_PASSWORD=clickhouse
    container_name: ch_analytics
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 5s
      retries: 5

  # -------------------------------------
  # ClickHouse Initialization (Schema Setup)
  # -------------------------------------
  clickhouse-init:
    image: clickhouse/clickhouse-server
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./migrations/clickhouse_schema.sql:/docker-entrypoint-initdb.d/schema.sql
    environment:
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    command: bash -c "sleep 10 && echo 'Running schema.sql' && clickhouse-client --host clickhouse --user clickhouse --password clickhouse --multiquery < /docker-entrypoint-initdb.d/schema.sql"

  # -------------------------------------
  # Flyway Migrations
  # -------------------------------------
  flyway:
    image: flyway/flyway
    container_name: db_migrations
    depends_on:
      postgres:
        condition: service_healthy
    command: -url=jdbc:postgresql://postgres:5432/postgres -user=postgres -locations=filesystem:/flyway/sql migrate
    volumes:
      - ./migrations/:/flyway/sql
    environment:
      FLYWAY_CONNECT_RETRIES: 10

  # -------------------------------------
  # Python App (runs app.py using uv)
  # -------------------------------------
  app:
    image: python:3.12-slim
    container_name: my_python_app
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      flyway:
        condition: service_completed_successfully
      clickhouse-init:
        condition: service_completed_successfully
    command: >
      sh -c "
          pip install uv &&
          . .venv/bin/activate &&
          uv run python app.py
        "

volumes:
  postgres_data:
  clickhouse_data:
